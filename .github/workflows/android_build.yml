name: Master CI

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

  # Allows you to run the workflow manually
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:


  check:
    name: Static Checks

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      
      - name: check cache
        run: [ -d ~/.gradle/caches ] || echo "The gradle cache directory exists"
        
      - uses: KengoTODA/setup-java@introduce-cache
        with:
          distribution: 'adopt'
          java-version: 16
          cache: gradle
#       - uses: actions/cache@v2
#         with:
#           path: ~/.gradle/caches
#           key: gradle-${{ runner.os }}-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/buildSrc/src/main/kotlin/Library.kt') }}
      - name: check cache
        run: [ -d ~/.gradle/caches ] || echo "The gradle cache directory exists"
      
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Spotless
        run: ./gradlew spotlessCheck

#       - name: Run Build
#         run: ./gradlew build
        
      - name: Run DeteKT code formatter
        run: ./gradlew detekt

  unit-test:

    needs: check

    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: check cache
        run: [ -d ~/.gradle/caches ] || echo "The gradle cache directory exists"
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11


      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - uses: actions/cache@v2
        continue-on-error: true # continue if the cache restore/upload fails
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Unit tests
        run: ./gradlew test

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/
        if: always()


  instrumentation-test:

    needs: check

    name: Run UI Tests
    runs-on: macos-latest
    timeout-minutes: 20
    strategy:
      fail-fast: true
      matrix:
        api-level: [ 21, 23, 29]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11


      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Gradle cache
        uses: actions/cache@v2
        continue-on-error: true # continue if the cache restore/upload fails
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}

      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run kaspresso tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck --stacktrace

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/
        if: always()
